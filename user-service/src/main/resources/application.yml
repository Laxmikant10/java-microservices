server:
  port: 8081

spring:

  #just to check if its picking up the profiles from config server
  #  profiles:
  #    active: dev

  # name can be picked up from config server as well if we defined our there
  application:
    name: user-service

  datasource:
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: root


  jpa:
    #Hibernate Properties( add dialect according to DB in our case its MySQL) it will take automatically
    #properties:
    #hibernate:
    #dialect: org.hibernate.dialect.MySQL8Dialect

    hibernate:
      ddl-auto: update

  config:
    import: optional:configserver:http://localhost:8085
  #spring.config.import= configserver:http:localhost:8085

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri:  https://dev-46616172.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oa9ulg8jsHUpL9fE5d7
            client-secret: WX1TiByaW7DPgzQO32LrQXrCNEzinBEpC9uYyPM6

        provider:
          okta:
            issuer-uri: https://dev-46616172.okta.com/oauth2/default

# we can fetch below properties from config-server
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health

  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED

  retry:
    instances:
      ratingHotelService:
        max-attempts: 3
        wait-duration: 5s

  ratelimiter:
    instances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 3
        timeout-duration: 0

okta:
  oauth2:
    issuer: https://dev-46616172.okta.com/oauth2/default
    audience: api://default